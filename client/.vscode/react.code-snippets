{
  "Create a Storybook story": {
    "prefix": "story",
    "body": [
      "import ${1:${TM_FILENAME/(.*).stories.tsx?/${1}/}} from './${2:${TM_FILENAME/(.*).stories.tsx?/${1}/}}';",
      "import { Meta, StoryObj } from '@storybook/react';",
      "",
      "type ${1:${TM_FILENAME/(.*).stories.tsx?/${1}/}}Props = React.ComponentProps<typeof ${1:${TM_FILENAME/(.*).stories.tsx?/${1}/}}>;",
      "type Story = StoryObj<${1:${TM_FILENAME/(.*).stories.tsx?/${1}/}}Props>;",
      "",
      "const meta = {",
      "  component: ${1:${TM_FILENAME/(.*).stories.tsx?/${1}/}},",
      "  title: 'components/${2:${TM_FILENAME/(.*).stories.tsx?/${1}/}}',",
      "  parameters: {",
      "    // Automatically mock /^on.*/ props as actions",
      "    // https://storybook.js.org/docs/essentials/actions",
      "    actions: { argTypesRegex: '^on.*' },",
      "  },",
      "  // If this component needs a provider or a parent CSS selector, wrap it",
      "  // Example:",
      "  // decorators: [(Story) => <div className=\"parent\"><Provider><Story/></Provider></div>]",
      "  decorators: [],",
      "} satisfies Meta<${1:${TM_FILENAME/(.*).stories.tsx?/${1}/}}Props>;",
      "export default meta;",
      "",
      "export const Default = {",
      "  args: {},",
      "} satisfies Story;",
      "",
      "// Add more stories here",
      "$0",
    ],
    "description": "Create a Storybook story",
  },
  "Create React function component with memo": {
    "prefix": "rfcmemo",
    "body": [
      "import React from 'react';",
      "",
      "export type ${1:ComponentName}Props = {};",
      "",
      "/** ${2:TODO: Describe this component} */",
      "const ${1:ComponentName} = React.memo(function (props: ${1:ComponentName}Props) {",
      "  return <div>Stub</div>;",
      "});",
      "",
      "export default ${1:ComponentName};",
      "",
    ],
    "description": "Create React function component with memo",
  },
}
